language: php

php:
#  - 5.4
#  - 5.5
#  - 5.6
  - 7.0
  - nightly

matrix:
  fast_finish: true
  allow_failures:
#    - php: 7.0
    - php: nightly

sudo: true

# cache composer dirs
cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/download

before_install:
  # Parallel download
  - sudo apt-get update -qq 
  - sudo apt-get install aria2 curl -y

  # Retrieves and extracts the DB2 binaries
  - if [ ! -d $HOME/download ]; then mkdir $HOME/download; fi
  - DOWNLOAD_FILE=v10.5_linuxx64_expc.tar.gz
  - if [ ! -f $HOME/download/${DOWNLOAD_FILE} ]; then travis_retry export DOWNLOAD_LINK=$(phantomjs --ssl-protocol=tlsv1 ${TRAVIS_BUILD_DIR}/tests/ci/travis/download.js | tail -1 | grep http); fi
  - if [ ! -f $HOME/download/${DOWNLOAD_FILE} ]; then travis_retry aria2c -x 16 -d $HOME/download -o ${DOWNLOAD_FILE} ${DOWNLOAD_LINK}; fi
  - cp $HOME/download/${DOWNLOAD_FILE} /tmp
  - cd /tmp
  - tar zxvf ${DOWNLOAD_FILE}

  # INSTALL
  # Install the required libraries
  - sudo apt-get install -qqy libaio1 lib32stdc++6 libpam-ldap:i386 gdb
  - sudo ln -s /lib/i386-linux-gnu/libpam.so.0 /lib/libpam.so.0

  # Checks the prerequisites
  - cd /tmp/expc ; ./db2prereqcheck -l
  # Install DB2 and creates an instance (Response file)
  - sudo ./db2setup -r  ${TRAVIS_BUILD_DIR}/tests/ci/travis/db2.rsp
  # Create user
  - sudo useradd test
  - echo "test:test" | sudo chpasswd
  # Changes the security
  - sudo usermod -a -G db2iadm1 test
  - sudo chsh -s /bin/bash db2inst1
  - sudo su - db2inst1 -c "db2 update dbm cfg using SYSADM_GROUP db2iadm1 ; db2stop ; db2start"
  # Creates the database
  - sudo su - db2inst1 -c "db2 create db test ; db2 connect to test ; db2 grant dbadm on database to user test"
  
  # Install pdo_ibm
  - cd /tmp
  - export DB2DIR=/home/db2inst1/sqllib
  - git clone https://git.php.net/repository/pecl/database/pdo_ibm.git
  - patch pdo_ibm/ibm_driver.c < ${TRAVIS_BUILD_DIR}/tests/ci/travis/ibm_driver.c.patch || true
  - (cd pdo_ibm/; phpize && ./configure --with-pdo-ibm=${DB2DIR} && make && sudo make install)

install:
  - cd ${TRAVIS_BUILD_DIR}
  #enabling pdo_ibm
  - echo "extension=pdo_ibm.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - php -m | grep -i pdo

  #preparing Yii2 environment
  - travis_retry composer self-update && composer --version
  - travis_retry composer global require "fxp/composer-asset-plugin:~1.1.3" --prefer-dist --no-interaction
  - export PATH="$HOME/.composer/vendor/bin:$PATH"

  #installing composer dependency
  - travis_retry composer install --prefer-dist --no-interaction
  #needed to use tests of Yii2
  - rm vendor/yiisoft/yii2-dev -Rf
  - travis_retry composer install --prefer-source -o --no-interaction

before_script:
  - phpenv config-rm xdebug.ini
  - ulimit -c
  - ulimit -c unlimited -S
#  - |
#    if [ $TRAVIS_PHP_VERSION = '5.6' ]; then
#      PHPUNIT_FLAGS="--coverage-clover=coverage.clover"
#    fi

script:
  - vendor/bin/phpunit --verbose $PHPUNIT_FLAGS --debug || RESULT=$?
  - for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb `php -r 'echo PHP_BINARY;'` core* -ex "thread apply all bt" -ex "set pagination 0" -batch; done;
  - if [[ ${RESULT} != 0 ]]; then exit $RESULT ; fi;

#after_script:
#  - |
#    if [ $TRAVIS_PHP_VERSION = '5.6' ]; then
#      travis_retry wget https://scrutinizer-ci.com/ocular.phar
#      php ocular.phar code-coverage:upload --format=php-clover coverage.clover
#    fi
